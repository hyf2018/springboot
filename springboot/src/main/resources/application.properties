# 以开发环境为默认配置
spring.profiles.active=dev

# 指定项目路径
spring.mvc.servlet.path=/test

############  mysql的连接配置
spring.datasource.url=jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

############  mybatis配置
mybatis.mapper-locations=classpath:mapper/*.xml

############  缓存
spring.cache.cache-names=cache1,cache2
# 有效时间为 10 分钟
spring.cache.redis.time-to-live=600000

################  Redis 基础配置
# Redis数据库索引（默认为0）
spring.redis.database=0  
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379  
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 链接超时时间 单位 ms（毫秒）
spring.redis.timeout=3000
# Redis 线程池设置 
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=30
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0

############  Thymeleaf模板配置（XML/XHTML/HTML5模板引擎）UserMapper.xml
# Enable template caching.
spring.thymeleaf.cache=false 
# Check that the templates location exists.
spring.thymeleaf.check-template-location=true 
# Content-Type value.
#spring.thymeleaf.content-type=text/html 
# Enable MVC Thymeleaf view resolution.
spring.thymeleaf.enabled=true 
# Template encoding. --使用报错
#spring.thymeleaf.encoding=UTF-8
# Comma-separated list of view names that should be excluded from resolution.
spring.thymeleaf.excluded-view-names= 
# Template mode to be applied to templates.Must be one of: 'HTML', 'XML', 'TEXT', 'JAVASCRIPT', 'CSS', 'RAW'.
spring.thymeleaf.mode=HTML
# Prefix that gets prepended to view names when building a URL.
spring.thymeleaf.prefix=classpath:/templates/
# Suffix that gets appended to view names when building a URL.
spring.thymeleaf.suffix=.html
# Order of the template resolver in the chain. spring.thymeleaf.view-names= # Comma-separated list of view names that can be resolved.
spring.thymeleaf.template-resolver-order=

############  文件上传
# 指定文件保存路径(自定义)
spring.file.uploadPath=D:/Temp/upload/
# 是否支持批量上传   (默认值 true)
spring.servlet.multipart.enabled=true
# 上传文件的临时目录 （linux的默认临时目录定时会被删除会导致上传失败，尽量指定临时目录）
spring.servlet.multipart.location=D:/Temp/tmp
# 上传文件最大 （支持大写的KB、MB、GB）
spring.servlet.multipart.max-file-size=10MB
# 设置总上传的数据大小 （支持大写的KB、MB、GB）
spring.servlet.multipart.max-request-size=100MB
# 文件大小阈值，当大于这个阈值时将写入到磁盘，否则存在内存中，（默认值0 一般情况下不用特意修改）
spring.servlet.multipart.file-size-threshold=0

############  事件和监听
#org.springframework.context.ApplicationListener=com.example.project.MyListener


############actuator 服务监控与管理
# 描述信息
info.blog-url=http://example.com
info.author=HYF
info.version=@project.version@

# 加载所有的端点/默认只加载了 info / health
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#跨域支持 , 允许来自 example.com 域的 GET 和 POST 调用：
management.endpoints.web.cors.allowed-origins=http://example.com
management.endpoints.web.cors.allowed-methods=GET,POST

# 可以关闭制定的端点
management.endpoint.shutdown.enabled=false

# 路径映射，将 health 路径映射成 rest_health 那么在访问 health 路径将为404，因为原路径已经变成 rest_health 了，一般情况下不建议使用
# management.endpoints.web.path-mapping.health=rest_health

